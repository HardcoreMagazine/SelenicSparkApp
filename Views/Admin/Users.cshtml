@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model IEnumerable<IdentityUser>
@{
    ViewData["Title"] = "Manage users";
}

<style>
	table {
		width: 100%;
		border: 1px solid;
		border-collapse: collapse;
	}
	table th {
		border: 1px solid;
		background: #c0c0c0;
		text-align: center;
	}

	table td {
		border: 1px solid;
		text-align: center;
		padding: 5px;
	}
</style>

@*
	BY DEFAULT THIS PAGE DISPLAYS WHOLE USER DATABASE, 
	THIS PROJECT MADE WITH THOUGHT IN MIND OF LOW USERS COUNT DATABASE, 
	FEEL FREE TO MODIFY IT, ADD PAGES & ETC
*@
@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole("Admin")) // Triple-checking never hurt anyone
    {
        <div>
            <h1 style="text-align:center;">
                Hello, @User.Identity?.Name
            </h1>
			<hr />
			<table>
				<thead>
					<tr>
						<th>@Html.DisplayNameFor(m => m.Id)</th>
						<th>@Html.DisplayNameFor(m => m.UserName)</th>
						<th>Role</th>
						<th>@Html.DisplayNameFor(m => m.Email)</th>
						<th>Confirmed</th>
						<th>2FA</th>
						<th>Ban until</th>
						<th>Bad Logins</th>
						<th>&nbsp;</th>
						<th>&nbsp;</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var user in UserManager.Users)
					{
						<tr>
							<td>@user.Id</td>
							<td>@user.UserName</td>
							<td>
								@{
									// Normally user would have only 1 role
									// But just in case...
									var roles = await UserManager.GetRolesAsync(user);
									var rolesList = "";
									foreach (var role in roles)
									{
										rolesList += $"{role};\n";
									}
									@rolesList
								}
							</td>
							<td>@user.Email</td>
							<td>@user.EmailConfirmed</td>
							<td>@user.TwoFactorEnabled</td>
							<td>@user.LockoutEnd</td>
							<td>@user.AccessFailedCount</td>
							<td>
								<a asp-action="User" asp-route-id="@user.Id">Edit</a>
							</td>
							<td>
								<a asp-action="DeleteUser" asp-route-id="@user.Id">Remove</a>
							</td>
						</tr>
					}
				</tbody>
			</table>
        </div>
    }
}

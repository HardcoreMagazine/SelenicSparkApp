@using Microsoft.AspNetCore.Identity

@model SelenicSparkApp.Views.Admin.EditUserModel
@inject SignInManager<IdentityUser> SignInMgr
@inject RoleManager<IdentityRole> RoleMgr

@{
    ViewData["Title"] = "Edit user";
}

<link rel="stylesheet" href="~/css/edituser.css">

@if (SignInMgr.IsSignedIn(User))
{
    @if (User.IsInRole("Admin")) // Triple-checking never hurt anyone
    {
        <div>
            <form asp-action="EditUser">
                <input type="hidden" asp-for="Id" />
                <div class="form-group">
                    <label asp-for="UserName" class="control-label">Username</label>
                    <input asp-for="UserName" class="form-control" autocomplete="off" />
                </div>
                <div class="form-group">
                    <label asp-for="UserRoles" class="control-label">Role(s)</label>
                    <ul class="no-bullets" id="allRoles">
                        @foreach (var role in Model.UserRoles)
                        {
                            <li id="@role">
                                <button type="button" class="btn-small-danger" onclick="specialRemLi('@role');">
                                        <svg height="16" viewBox="0 0 16 16" width="16">
                                            <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
                                        </svg>
                                        @role
                                </button>
                            </li>
                        }
                        <li>
                            <div class="dropdown">
                                <button type="button" class="btn-small-danger dropbtn" onclick="showRoles();">
                                    <svg height="16" viewBox="0 0 16 16" width="16">
                                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                                    </svg>
                                </button>
                                <div id="dropdownList" class="dropdown-content">
                                    @foreach (var availableRole in Model.AvailableRoles)
                                    {
                                        <a onclick="specialAddLi('@availableRole');" id="dd_@availableRole">@availableRole</a>
                                    }
                                    <a>&nbsp;</a> @*Empty field so user won't think button doesn't work *@
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>

                <div class="form-group">
                    <label asp-for="Email" class="control-label">Email</label>
                    <input asp-for="Email" class="form-control" autocomplete="off" />
                </div>
                <div class="form-group">
                    <label asp-for="EmailConfirmed" class="control-label">Email confirmed</label>
                    <select asp-for="EmailConfirmed" class="form-control">
                        @* "!" is a non-standard workaround for <@(...) inside tag attributes> error *@
                        <!option value="true" @(Model.EmailConfirmed ? "selected" : "")>Yes</!option>
                        <!option value="false" @(Model.EmailConfirmed ? "" : "selected")>No</!option>
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="LockoutEnd" class="control-label">Ban until [mm-dd-yyyy] (set empty to un-ban)</label>
                    <input asp-for="LockoutEnd" class="form-control" autocomplete="off" type="date" />
                </div>
                <div class="form-group">
                    <label asp-for="AccessFailedCount" class="control-label">Bad logins</label>
                    <input asp-for="AccessFailedCount" class="form-control" autocomplete="off" type="number"/>
                </div>
                <div class="form-group">
                    <label asp-for="UsernameChangeTokens" class="control-label">Username Change Tokens</label>
                    <input asp-for="UsernameChangeTokens" class="form-control" autocomplete="off" type="number"/>
                </div>
                <div class="form-group">
                    <label asp-for="UserWarningsCount" class="control-label">Warnings recieved</label>
                    <input asp-for="UserWarningsCount" class="form-control" autocomplete="off" type="number"/>
                </div>
                <div class="form-group" style="padding-top:10px;">
                    <input type="submit" value="Update" class="btn btn-primary w-100"/>
                </div>
            </form>
            <a asp-action="Users" style="padding-top:10px;justify-content:center;display:flex;">
                Back to Users list
            </a>
        </div>
    }
}

@functions {
    private object AssignRole(string role)
    {
        Model.UserRoles.Add(role);
        Model.AvailableRoles.Remove(role);
        return new object();
    }
    private object DeleteRole(string role)
    {
        Model.UserRoles.Remove(role);
        Model.AvailableRoles.Add(role);
        return new object();
    }
}

@section Scripts {
    <script src="~/js/rolesDropdown.js"></script>
    <script src="~/js/rolesMgr.js"></script>
}
